package cz.itsarka.homebudgetfromits.dto;

import lombok.Data;

import java.util.ArrayList;
import java.util.List;

@Data
public class ExpenseDTO {
    private Long id;
    private String user;
    private int year;
    private int month;
    private int electricity;
    private int gas;
    private int rental;
    private int car;
    private int petrol;
    private int internet;
    private int lunch;
    private int shoppingInStore;
    private int expectedContributionSum;

    private String balanceStatus; // ‚úÖ P≈ôipraveno pro zobrazen√≠ v HTML

    private List<ShoppingEntryDTO> shoppingEntries = new ArrayList<>();

    private List<ExpectedContributionEntryDTO> expectedContributions = new ArrayList<>();

    //V√Ωpoƒçet Celkov√©ho Souƒçtu V√Ωdaj≈Ø
    // Seƒçte v≈°echny v√Ωdajov√© kategorie a vr√°t√≠ jejich celkovou hodnotu.
    public int getTotalSum() {
        return electricity + gas + rental + car + petrol + internet + lunch + shoppingInStore;
    }

    //V√Ωpoƒçet Celkov√© V√Ω≈°e Oƒçek√°van√Ωch P≈ô√≠spƒõvk≈Ø
    //Seƒçte v≈°echny oƒçek√°van√© p≈ô√≠spƒõvky (getAmount() ka≈æd√©ho p≈ô√≠spƒõvku).
    //Pokud je seznam expectedContributions pr√°zdn√Ω nebo null, vr√°t√≠ 0.
    public int getExpectedContributionSum() {
        if (expectedContributions == null) {
            return 0; // ‚úÖ Pokud seznam neexistuje, vr√°t√≠me 0, aby aplikace nespadla
        }
        return expectedContributions.stream().mapToInt(ExpectedContributionEntryDTO::getAmount).sum();
    }

    //V√Ωpoƒçet Bilance (Z≈Østatku)
    // Vypoƒç√≠t√° rozd√≠l mezi celkov√Ωmi v√Ωdaji (getTotalSum()) a celkov√Ωmi p≈ô√≠spƒõvky (totalContributions).
    //Pokud jsou p≈ô√≠spƒõvky vy≈°≈°√≠ ne≈æ v√Ωdaje, bilance bude kladn√°.
    //Pokud jsou v√Ωdaje vy≈°≈°√≠ ne≈æ p≈ô√≠spƒõvky, bilance bude z√°porn√°.
    public int getBalance() {
        int totalContributions = expectedContributions.stream()
                .mapToInt(ExpectedContributionEntryDTO::getAmount)
                .sum();
        return getTotalSum() - totalContributions;
    }

    //Aktualizace Stavu Bilance
    public void updateBalanceStatus() {
        int balance = getBalance();
        if (balance > 0) {
            this.balanceStatus = "üí∞ Dostane zpƒõt " + balance + " Kƒç"; // Zmƒõnƒõn√° ikona
        } else if (balance < 0) {
            this.balanceStatus = "‚ùå Mus√≠ zaplatit " + Math.abs(balance) + " Kƒç";
        } else {
            this.balanceStatus = "‚úÖ Vyrovn√°no";
        }
    }

    //Filtrov√°n√≠ V√Ωdajov√Ωch Kategori√≠
    public void filterCategories(List<String> categories) {
        if (!categories.contains("electricity")) {
            this.electricity = 0;
        }
        if (!categories.contains("gas")) {
            this.gas = 0;
        }
        if (!categories.contains("rental")) {
            this.rental = 0;
        }
        if (!categories.contains("car")) {
            this.car = 0;
        }
        if (!categories.contains("petrol")) {
            this.petrol = 0;
        }
        if (!categories.contains("internet")) {
            this.internet = 0;
        }
        if (!categories.contains("lunch")) {
            this.lunch = 0;
        }
        if (!categories.contains("shoppingInStore")) {
            this.shoppingInStore = 0;
        }
        if (!categories.contains("totalSum")) {
            // Pokud u≈æivatel nezvolil "Celkem", nastav√≠me souƒçet na 0
            this.balanceStatus = null;
        }
    }
}

/*
ExpenseDTO je DTO objekt, kter√Ω se pou≈æ√≠v√° pro p≈ôenos dat mezi backendem a frontendem.
ExpenseDTO je serializov√°n do JSON a posl√°n API (@RestController) do frontend aplikace.
   */


